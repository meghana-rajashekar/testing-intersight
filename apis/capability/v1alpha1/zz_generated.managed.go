/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this AdapterUnitDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *AdapterUnitDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this AdapterUnitDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *AdapterUnitDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this AdapterUnitDescriptor.
func (mg *AdapterUnitDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ChassisDescriptor.
func (mg *ChassisDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ChassisDescriptor.
func (mg *ChassisDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ChassisDescriptor.
func (mg *ChassisDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ChassisDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ChassisDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ChassisDescriptor.
func (mg *ChassisDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ChassisDescriptor.
func (mg *ChassisDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ChassisDescriptor.
func (mg *ChassisDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ChassisDescriptor.
func (mg *ChassisDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ChassisDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ChassisDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ChassisDescriptor.
func (mg *ChassisDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ChassisManufacturingDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ChassisManufacturingDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ChassisManufacturingDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ChassisManufacturingDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ChassisManufacturingDef.
func (mg *ChassisManufacturingDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CimcFirmwareDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CimcFirmwareDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CimcFirmwareDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CimcFirmwareDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CimcFirmwareDescriptor.
func (mg *CimcFirmwareDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this EquipmentPhysicalDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *EquipmentPhysicalDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this EquipmentPhysicalDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *EquipmentPhysicalDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this EquipmentPhysicalDef.
func (mg *EquipmentPhysicalDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this EquipmentSlotArray.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *EquipmentSlotArray) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this EquipmentSlotArray.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *EquipmentSlotArray) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this EquipmentSlotArray.
func (mg *EquipmentSlotArray) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FanModuleDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FanModuleDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FanModuleDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FanModuleDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FanModuleDescriptor.
func (mg *FanModuleDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FanModuleManufacturingDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FanModuleManufacturingDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FanModuleManufacturingDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FanModuleManufacturingDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FanModuleManufacturingDef.
func (mg *FanModuleManufacturingDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IoCardCapabilityDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IoCardCapabilityDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IoCardCapabilityDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IoCardCapabilityDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IoCardCapabilityDef.
func (mg *IoCardCapabilityDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IoCardDescriptor.
func (mg *IoCardDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IoCardDescriptor.
func (mg *IoCardDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IoCardDescriptor.
func (mg *IoCardDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IoCardDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IoCardDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IoCardDescriptor.
func (mg *IoCardDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IoCardDescriptor.
func (mg *IoCardDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IoCardDescriptor.
func (mg *IoCardDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IoCardDescriptor.
func (mg *IoCardDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IoCardDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IoCardDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IoCardDescriptor.
func (mg *IoCardDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IoCardManufacturingDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IoCardManufacturingDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IoCardManufacturingDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IoCardManufacturingDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IoCardManufacturingDef.
func (mg *IoCardManufacturingDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PortGroupAggregationDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PortGroupAggregationDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PortGroupAggregationDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PortGroupAggregationDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PortGroupAggregationDef.
func (mg *PortGroupAggregationDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PsuDescriptor.
func (mg *PsuDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PsuDescriptor.
func (mg *PsuDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PsuDescriptor.
func (mg *PsuDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PsuDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PsuDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PsuDescriptor.
func (mg *PsuDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PsuDescriptor.
func (mg *PsuDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PsuDescriptor.
func (mg *PsuDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PsuDescriptor.
func (mg *PsuDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PsuDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PsuDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PsuDescriptor.
func (mg *PsuDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PsuManufacturingDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PsuManufacturingDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PsuManufacturingDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PsuManufacturingDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PsuManufacturingDef.
func (mg *PsuManufacturingDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServerModelsCapabilityDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServerModelsCapabilityDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServerModelsCapabilityDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServerModelsCapabilityDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServerModelsCapabilityDef.
func (mg *ServerModelsCapabilityDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServerSchemaDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServerSchemaDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServerSchemaDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServerSchemaDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServerSchemaDescriptor.
func (mg *ServerSchemaDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SiocModuleCapabilityDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SiocModuleCapabilityDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SiocModuleCapabilityDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SiocModuleCapabilityDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SiocModuleCapabilityDef.
func (mg *SiocModuleCapabilityDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SiocModuleDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SiocModuleDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SiocModuleDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SiocModuleDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SiocModuleDescriptor.
func (mg *SiocModuleDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SiocModuleManufacturingDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SiocModuleManufacturingDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SiocModuleManufacturingDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SiocModuleManufacturingDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SiocModuleManufacturingDef.
func (mg *SiocModuleManufacturingDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SwitchCapability.
func (mg *SwitchCapability) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SwitchCapability.
func (mg *SwitchCapability) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SwitchCapability.
func (mg *SwitchCapability) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SwitchCapability.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SwitchCapability) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SwitchCapability.
func (mg *SwitchCapability) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SwitchCapability.
func (mg *SwitchCapability) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SwitchCapability.
func (mg *SwitchCapability) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SwitchCapability.
func (mg *SwitchCapability) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SwitchCapability.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SwitchCapability) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SwitchCapability.
func (mg *SwitchCapability) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SwitchDescriptor.
func (mg *SwitchDescriptor) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SwitchDescriptor.
func (mg *SwitchDescriptor) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SwitchDescriptor.
func (mg *SwitchDescriptor) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SwitchDescriptor.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SwitchDescriptor) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SwitchDescriptor.
func (mg *SwitchDescriptor) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SwitchDescriptor.
func (mg *SwitchDescriptor) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SwitchDescriptor.
func (mg *SwitchDescriptor) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SwitchDescriptor.
func (mg *SwitchDescriptor) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SwitchDescriptor.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SwitchDescriptor) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SwitchDescriptor.
func (mg *SwitchDescriptor) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SwitchManufacturingDef.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SwitchManufacturingDef) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SwitchManufacturingDef.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SwitchManufacturingDef) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SwitchManufacturingDef.
func (mg *SwitchManufacturingDef) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
