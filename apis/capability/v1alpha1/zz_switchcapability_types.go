/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FcEndHostModeReservedVsansObservation struct {
}

type FcEndHostModeReservedVsansParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type NetworkLimitsObservation struct {
}

type NetworkLimitsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Maximum Compressed configurable VLANs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaxCompressedPortVlanCount *int64 `json:"maxCompressedPortVlanCount,omitempty" tf:"max_compressed_port_vlan_count,omitempty"`

	// Maximum configurable VLANs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaxUncompressedPortVlanCount *int64 `json:"maxUncompressedPortVlanCount,omitempty" tf:"max_uncompressed_port_vlan_count,omitempty"`

	// Maximum configured and enabled Traffic Monitoring sessions on this Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumActiveTrafficMonitoringSessions *int64 `json:"maximumActiveTrafficMonitoringSessions,omitempty" tf:"maximum_active_traffic_monitoring_sessions,omitempty"`

	// Maximum configurable Ethernet port-channels on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumEthernetPortChannels *int64 `json:"maximumEthernetPortChannels,omitempty" tf:"maximum_ethernet_port_channels,omitempty"`

	// Maximum configurable Ethernet Uplink ports on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumEthernetUplinkPorts *int64 `json:"maximumEthernetUplinkPorts,omitempty" tf:"maximum_ethernet_uplink_ports,omitempty"`

	// Maximum configurable Fibre Channel port-channel member ports on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumFcPortChannelMembers *int64 `json:"maximumFcPortChannelMembers,omitempty" tf:"maximum_fc_port_channel_members,omitempty"`

	// Maximum configurable Fibre Channel port-channels on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumFcPortChannels *int64 `json:"maximumFcPortChannels,omitempty" tf:"maximum_fc_port_channels,omitempty"`

	// Maximum configurable IGMP Groups on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumIgmpGroups *int64 `json:"maximumIgmpGroups,omitempty" tf:"maximum_igmp_groups,omitempty"`

	// Maximum configurable ports per each port-channel on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumPortChannelMembers *int64 `json:"maximumPortChannelMembers,omitempty" tf:"maximum_port_channel_members,omitempty"`

	// Maximum configurable Primary Private VLANs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumPrimaryVlan *int64 `json:"maximumPrimaryVlan,omitempty" tf:"maximum_primary_vlan,omitempty"`

	// Maximum configurable Secondary Private VLANs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumSecondaryVlan *int64 `json:"maximumSecondaryVlan,omitempty" tf:"maximum_secondary_vlan,omitempty"`

	// Maximum configurable Secondary VLANs per each Primary VLAN on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumSecondaryVlanPerPrimary *int64 `json:"maximumSecondaryVlanPerPrimary,omitempty" tf:"maximum_secondary_vlan_per_primary,omitempty"`

	// Maximum allowes VIFs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumVifs *int64 `json:"maximumVifs,omitempty" tf:"maximum_vifs,omitempty"`

	// Maximum configurable VLANs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumVlans *int64 `json:"maximumVlans,omitempty" tf:"maximum_vlans,omitempty"`

	// Minimum required fans in 'active' state for this Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MinimumActiveFans *int64 `json:"minimumActiveFans,omitempty" tf:"minimum_active_fans,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type PortsSupporting100GSpeedObservation struct {
}

type PortsSupporting100GSpeedParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupporting10GSpeedObservation struct {
}

type PortsSupporting10GSpeedParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupporting1GSpeedObservation struct {
}

type PortsSupporting1GSpeedParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupporting25GSpeedObservation struct {
}

type PortsSupporting25GSpeedParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupporting40GSpeedObservation struct {
}

type PortsSupporting40GSpeedParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupportingBreakoutObservation struct {
}

type PortsSupportingBreakoutParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupportingFcoeObservation struct {
}

type PortsSupportingFcoeParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type PortsSupportingServerRoleObservation struct {
}

type PortsSupportingServerRoleParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type ReservedVsansObservation struct {
}

type ReservedVsansParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

type StorageLimitsObservation struct {
}

type StorageLimitsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Maximum user zones per Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumUserZoneCount *int64 `json:"maximumUserZoneCount,omitempty" tf:"maximum_user_zone_count,omitempty"`

	// Maximum configurable Virtual Fibre Channel interfaces on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumVirtualFcInterfaces *int64 `json:"maximumVirtualFcInterfaces,omitempty" tf:"maximum_virtual_fc_interfaces,omitempty"`

	// Maximum configurable Virtual Fibre Channel interfaces per blade.
	// +kubebuilder:validation:Optional
	MaximumVirtualFcInterfacesPerBladeServer *int64 `json:"maximumVirtualFcInterfacesPerBladeServer,omitempty" tf:"maximum_virtual_fc_interfaces_per_blade_server,omitempty"`

	// Maximum configurable VSANs on Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumVsans *int64 `json:"maximumVsans,omitempty" tf:"maximum_vsans,omitempty"`

	// Zone limit per Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumZoneCount *int64 `json:"maximumZoneCount,omitempty" tf:"maximum_zone_count,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type SwitchCapabilityAncestorsObservation struct {
}

type SwitchCapabilityAncestorsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type SwitchCapabilityObservation struct {
}

type SwitchCapabilityParameters struct {

	// The Account ID for this managed object.
	// +kubebuilder:validation:Optional
	AccountMoid *string `json:"accountMoid,omitempty" tf:"account_moid,omitempty"`

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// An array of relationships to moBaseMo resources.
	// +kubebuilder:validation:Optional
	Ancestors []SwitchCapabilityAncestorsParameters `json:"ancestors,omitempty" tf:"ancestors,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The time when this managed object was created.
	// +kubebuilder:validation:Optional
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Default Fcoe VLAN associated with this switch.
	// +kubebuilder:validation:Optional
	DefaultFcoeVlan *int64 `json:"defaultFcoeVlan,omitempty" tf:"default_fcoe_vlan,omitempty"`

	// The DomainGroup ID for this managed object.
	// +kubebuilder:validation:Optional
	DomainGroupMoid *string `json:"domainGroupMoid,omitempty" tf:"domain_group_moid,omitempty"`

	// Dynamic VIFs support on this switch.
	// +kubebuilder:validation:Optional
	DynamicVifsSupported *bool `json:"dynamicVifsSupported,omitempty" tf:"dynamic_vifs_supported,omitempty"`

	// Fan Modules support on this switch.
	// +kubebuilder:validation:Optional
	FanModulesSupported *bool `json:"fanModulesSupported,omitempty" tf:"fan_modules_supported,omitempty"`

	// +kubebuilder:validation:Optional
	FcEndHostModeReservedVsans []FcEndHostModeReservedVsansParameters `json:"fcEndHostModeReservedVsans,omitempty" tf:"fc_end_host_mode_reserved_vsans,omitempty"`

	// Fc Uplink ports auto negotiation speed support on this switch.
	// +kubebuilder:validation:Optional
	FcUplinkPortsAutoNegotiationSupported *bool `json:"fcUplinkPortsAutoNegotiationSupported,omitempty" tf:"fc_uplink_ports_auto_negotiation_supported,omitempty"`

	// Locator Beacon LED support on this switch.
	// +kubebuilder:validation:Optional
	LocatorBeaconSupported *bool `json:"locatorBeaconSupported,omitempty" tf:"locator_beacon_supported,omitempty"`

	// Maximum allowed physical ports on this switch.
	// +kubebuilder:validation:Optional
	MaxPorts *int64 `json:"maxPorts,omitempty" tf:"max_ports,omitempty"`

	// Maximum allowed physical slots on this switch.
	// +kubebuilder:validation:Optional
	MaxSlots *int64 `json:"maxSlots,omitempty" tf:"max_slots,omitempty"`

	// The time when this managed object was last modified.
	// +kubebuilder:validation:Optional
	ModTime *string `json:"modTime,omitempty" tf:"mod_time,omitempty"`

	// The unique identifier of this Managed Object instance.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// List of network limitations for this switch.
	// +kubebuilder:validation:Optional
	NetworkLimits []NetworkLimitsParameters `json:"networkLimits,omitempty" tf:"network_limits,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// +kubebuilder:validation:Optional
	Owners []*string `json:"owners,omitempty" tf:"owners,omitempty"`

	// A reference to a moBaseMo resource.
	// When the $expand query parameter is specified, the referenced resource is returned inline.
	// +kubebuilder:validation:Optional
	Parent []SwitchCapabilityParentParameters `json:"parent,omitempty" tf:"parent,omitempty"`

	// An array of relationships to moBaseMo resources.
	// +kubebuilder:validation:Optional
	PermissionResources []SwitchCapabilityPermissionResourcesParameters `json:"permissionResources,omitempty" tf:"permission_resources,omitempty"`

	// Product Identifier for a Switch/Fabric-Interconnect.
	// * `UCS-FI-6454` - The standard 4th generation UCS Fabric Interconnect with 54 ports.
	// * `UCS-FI-64108` - The expanded 4th generation UCS Fabric Interconnect with 108 ports.
	// * `unknown` - Unknown device type, usage is TBD.
	// +kubebuilder:validation:Optional
	Pid *string `json:"pid,omitempty" tf:"pid,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupporting100GSpeed []PortsSupporting100GSpeedParameters `json:"portsSupporting100GSpeed,omitempty" tf:"ports_supporting100g_speed,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupporting10GSpeed []PortsSupporting10GSpeedParameters `json:"portsSupporting10GSpeed,omitempty" tf:"ports_supporting10g_speed,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupporting1GSpeed []PortsSupporting1GSpeedParameters `json:"portsSupporting1GSpeed,omitempty" tf:"ports_supporting1g_speed,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupporting25GSpeed []PortsSupporting25GSpeedParameters `json:"portsSupporting25GSpeed,omitempty" tf:"ports_supporting25g_speed,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupporting40GSpeed []PortsSupporting40GSpeedParameters `json:"portsSupporting40GSpeed,omitempty" tf:"ports_supporting40g_speed,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupportingBreakout []PortsSupportingBreakoutParameters `json:"portsSupportingBreakout,omitempty" tf:"ports_supporting_breakout,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupportingFcoe []PortsSupportingFcoeParameters `json:"portsSupportingFcoe,omitempty" tf:"ports_supporting_fcoe,omitempty"`

	// +kubebuilder:validation:Optional
	PortsSupportingServerRole []PortsSupportingServerRoleParameters `json:"portsSupportingServerRole,omitempty" tf:"ports_supporting_server_role,omitempty"`

	// +kubebuilder:validation:Optional
	ReservedVsans []ReservedVsansParameters `json:"reservedVsans,omitempty" tf:"reserved_vsans,omitempty"`

	// Sereno Adaptor with Netflow support on this switch.
	// +kubebuilder:validation:Optional
	SerenoNetflowSupported *bool `json:"serenoNetflowSupported,omitempty" tf:"sereno_netflow_supported,omitempty"`

	// Intersight provides pre-built workflows, tasks and policies to end users through global catalogs.
	// Objects that are made available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs.
	// +kubebuilder:validation:Optional
	SharedScope *string `json:"sharedScope,omitempty" tf:"shared_scope,omitempty"`

	// SKU information for Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	Sku *string `json:"sku,omitempty" tf:"sku,omitempty"`

	// List of storage limitations for this switch.
	// +kubebuilder:validation:Optional
	StorageLimits []StorageLimitsParameters `json:"storageLimits,omitempty" tf:"storage_limits,omitempty"`

	// +kubebuilder:validation:Optional
	SwitchingModeCapabilities []SwitchingModeCapabilitiesParameters `json:"switchingModeCapabilities,omitempty" tf:"switching_mode_capabilities,omitempty"`

	// List of system limitations for this switch.
	// +kubebuilder:validation:Optional
	SystemLimits []SystemLimitsParameters `json:"systemLimits,omitempty" tf:"system_limits,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []SwitchCapabilityTagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Optional
	UnifiedPorts []UnifiedPortsParameters `json:"unifiedPorts,omitempty" tf:"unified_ports,omitempty"`

	// The Slider rule for Unified ports on this switch.
	// +kubebuilder:validation:Optional
	UnifiedRule *string `json:"unifiedRule,omitempty" tf:"unified_rule,omitempty"`

	// The versioning info for this managed object.
	// +kubebuilder:validation:Optional
	VersionContext []SwitchCapabilityVersionContextParameters `json:"versionContext,omitempty" tf:"version_context,omitempty"`

	// VID information for Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	Vid *string `json:"vid,omitempty" tf:"vid,omitempty"`
}

type SwitchCapabilityParentObservation struct {
}

type SwitchCapabilityParentParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type SwitchCapabilityPermissionResourcesObservation struct {
}

type SwitchCapabilityPermissionResourcesParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type SwitchCapabilityTagsObservation struct {
}

type SwitchCapabilityTagsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The string representation of a tag key.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The string representation of a tag value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SwitchCapabilityVersionContextInterestedMosObservation struct {
}

type SwitchCapabilityVersionContextInterestedMosParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type SwitchCapabilityVersionContextObservation struct {
}

type SwitchCapabilityVersionContextParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// +kubebuilder:validation:Optional
	InterestedMos []SwitchCapabilityVersionContextInterestedMosParameters `json:"interestedMos,omitempty" tf:"interested_mos,omitempty"`

	// The version of the Managed Object, e.g. an incrementing number or a hash id.
	// +kubebuilder:validation:Optional
	NrVersion *string `json:"nrVersion,omitempty" tf:"nr_version,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// A reference to the original Managed Object.
	// +kubebuilder:validation:Optional
	RefMo []SwitchCapabilityVersionContextRefMoParameters `json:"refMo,omitempty" tf:"ref_mo,omitempty"`

	// The time this versioned Managed Object was created.
	// +kubebuilder:validation:Optional
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// Specifies type of version. Currently the only supported value is "Configured"
	// that is used to keep track of snapshots of policies and profiles that are intended
	// to be configured to target endpoints.
	// * `Modified` - Version created every time an object is modified.
	// * `Configured` - Version created every time an object is configured to the service profile.
	// * `Deployed` - Version created for objects related to a service profile when it is deployed.
	// +kubebuilder:validation:Optional
	VersionType *string `json:"versionType,omitempty" tf:"version_type,omitempty"`
}

type SwitchCapabilityVersionContextRefMoObservation struct {
}

type SwitchCapabilityVersionContextRefMoParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type SwitchingModeCapabilitiesObservation struct {
}

type SwitchingModeCapabilitiesParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Switching mode type (endhost, switch) of the switch.
	// * `end-host` - In end-host mode, the fabric interconnects appear to the upstream devices as end hosts with multiple links.In this mode, the switch does not run Spanning Tree Protocol and avoids loops by following a set of rules for traffic forwarding.In case of ethernet switching mode - Ethernet end-host mode is also known as Ethernet host virtualizer.
	// * `switch` - In switch mode, the switch runs Spanning Tree Protocol to avoid loops, and broadcast and multicast packets are handled in the traditional way.This is the traditional switch mode.
	// +kubebuilder:validation:Optional
	SwitchingMode *string `json:"switchingMode,omitempty" tf:"switching_mode,omitempty"`

	// VP Compression support on this switch.
	// +kubebuilder:validation:Optional
	VpCompressionSupported *bool `json:"vpCompressionSupported,omitempty" tf:"vp_compression_supported,omitempty"`
}

type SystemLimitsObservation struct {
}

type SystemLimitsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Maximum UCS chassis that can be connected to this Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumChassisCount *int64 `json:"maximumChassisCount,omitempty" tf:"maximum_chassis_count,omitempty"`

	// Maximum UCS Fabric-extenders (FEX) per Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumFexPerDomain *int64 `json:"maximumFexPerDomain,omitempty" tf:"maximum_fex_per_domain,omitempty"`

	// Maximum UCS servers per Switch/Fabric-Interconnect.
	// +kubebuilder:validation:Optional
	MaximumServersPerDomain *int64 `json:"maximumServersPerDomain,omitempty" tf:"maximum_servers_per_domain,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type UnifiedPortsObservation struct {
}

type UnifiedPortsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Ending Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndPortID *int64 `json:"endPortId,omitempty" tf:"end_port_id,omitempty"`

	// Ending Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	EndSlotID *int64 `json:"endSlotId,omitempty" tf:"end_slot_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Starting Port ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartPortID *int64 `json:"startPortId,omitempty" tf:"start_port_id,omitempty"`

	// Starting Slot ID in this range of ports.
	// +kubebuilder:validation:Optional
	StartSlotID *int64 `json:"startSlotId,omitempty" tf:"start_slot_id,omitempty"`
}

// SwitchCapabilitySpec defines the desired state of SwitchCapability
type SwitchCapabilitySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SwitchCapabilityParameters `json:"forProvider"`
}

// SwitchCapabilityStatus defines the observed state of SwitchCapability.
type SwitchCapabilityStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SwitchCapabilityObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SwitchCapability is the Schema for the SwitchCapabilitys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,intersightjet}
type SwitchCapability struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SwitchCapabilitySpec   `json:"spec"`
	Status            SwitchCapabilityStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SwitchCapabilityList contains a list of SwitchCapabilitys
type SwitchCapabilityList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SwitchCapability `json:"items"`
}

// Repository type metadata.
var (
	SwitchCapability_Kind             = "SwitchCapability"
	SwitchCapability_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SwitchCapability_Kind}.String()
	SwitchCapability_KindAPIVersion   = SwitchCapability_Kind + "." + CRDGroupVersion.String()
	SwitchCapability_GroupVersionKind = CRDGroupVersion.WithKind(SwitchCapability_Kind)
)

func init() {
	SchemeBuilder.Register(&SwitchCapability{}, &SwitchCapabilityList{})
}
