/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/crossplane-contrib/provider-jet-intersight/apis/aaa/v1alpha1"
	v1alpha1access "github.com/crossplane-contrib/provider-jet-intersight/apis/access/v1alpha1"
	v1alpha1adapter "github.com/crossplane-contrib/provider-jet-intersight/apis/adapter/v1alpha1"
	v1alpha1appliance "github.com/crossplane-contrib/provider-jet-intersight/apis/appliance/v1alpha1"
	v1alpha1asset "github.com/crossplane-contrib/provider-jet-intersight/apis/asset/v1alpha1"
	v1alpha1bios "github.com/crossplane-contrib/provider-jet-intersight/apis/bios/v1alpha1"
	v1alpha1boot "github.com/crossplane-contrib/provider-jet-intersight/apis/boot/v1alpha1"
	v1alpha1bulk "github.com/crossplane-contrib/provider-jet-intersight/apis/bulk/v1alpha1"
	v1alpha1capability "github.com/crossplane-contrib/provider-jet-intersight/apis/capability/v1alpha1"
	v1alpha1certificatemanagement "github.com/crossplane-contrib/provider-jet-intersight/apis/certificatemanagement/v1alpha1"
	v1alpha1chassis "github.com/crossplane-contrib/provider-jet-intersight/apis/chassis/v1alpha1"
	v1alpha1comm "github.com/crossplane-contrib/provider-jet-intersight/apis/comm/v1alpha1"
	v1alpha1connectorpack "github.com/crossplane-contrib/provider-jet-intersight/apis/connectorpack/v1alpha1"
	v1alpha1convergedinfra "github.com/crossplane-contrib/provider-jet-intersight/apis/convergedinfra/v1alpha1"
	v1alpha1crd "github.com/crossplane-contrib/provider-jet-intersight/apis/crd/v1alpha1"
	v1alpha1deviceconnector "github.com/crossplane-contrib/provider-jet-intersight/apis/deviceconnector/v1alpha1"
	v1alpha1externalsite "github.com/crossplane-contrib/provider-jet-intersight/apis/externalsite/v1alpha1"
	v1alpha1fabric "github.com/crossplane-contrib/provider-jet-intersight/apis/fabric/v1alpha1"
	v1alpha1fcpool "github.com/crossplane-contrib/provider-jet-intersight/apis/fcpool/v1alpha1"
	v1alpha1firmware "github.com/crossplane-contrib/provider-jet-intersight/apis/firmware/v1alpha1"
	v1alpha1hcl "github.com/crossplane-contrib/provider-jet-intersight/apis/hcl/v1alpha1"
	v1alpha1hyperflex "github.com/crossplane-contrib/provider-jet-intersight/apis/hyperflex/v1alpha1"
	v1alpha1iam "github.com/crossplane-contrib/provider-jet-intersight/apis/iam/v1alpha1"
	v1alpha1ipmioverlan "github.com/crossplane-contrib/provider-jet-intersight/apis/ipmioverlan/v1alpha1"
	v1alpha1ippool "github.com/crossplane-contrib/provider-jet-intersight/apis/ippool/v1alpha1"
	v1alpha1iqnpool "github.com/crossplane-contrib/provider-jet-intersight/apis/iqnpool/v1alpha1"
	v1alpha1kubernetes "github.com/crossplane-contrib/provider-jet-intersight/apis/kubernetes/v1alpha1"
	v1alpha1kvm "github.com/crossplane-contrib/provider-jet-intersight/apis/kvm/v1alpha1"
	v1alpha1license "github.com/crossplane-contrib/provider-jet-intersight/apis/license/v1alpha1"
	v1alpha1macpool "github.com/crossplane-contrib/provider-jet-intersight/apis/macpool/v1alpha1"
	v1alpha1memory "github.com/crossplane-contrib/provider-jet-intersight/apis/memory/v1alpha1"
	v1alpha1networkconfig "github.com/crossplane-contrib/provider-jet-intersight/apis/networkconfig/v1alpha1"
	v1alpha1notification "github.com/crossplane-contrib/provider-jet-intersight/apis/notification/v1alpha1"
	v1alpha1ntp "github.com/crossplane-contrib/provider-jet-intersight/apis/ntp/v1alpha1"
	v1alpha1oauth "github.com/crossplane-contrib/provider-jet-intersight/apis/oauth/v1alpha1"
	v1alpha1oprs "github.com/crossplane-contrib/provider-jet-intersight/apis/oprs/v1alpha1"
	v1alpha1organization "github.com/crossplane-contrib/provider-jet-intersight/apis/organization/v1alpha1"
	v1alpha1os "github.com/crossplane-contrib/provider-jet-intersight/apis/os/v1alpha1"
	v1alpha1power "github.com/crossplane-contrib/provider-jet-intersight/apis/power/v1alpha1"
	v1alpha1recovery "github.com/crossplane-contrib/provider-jet-intersight/apis/recovery/v1alpha1"
	v1alpha1resource "github.com/crossplane-contrib/provider-jet-intersight/apis/resource/v1alpha1"
	v1alpha1resourcepool "github.com/crossplane-contrib/provider-jet-intersight/apis/resourcepool/v1alpha1"
	v1alpha1sdcard "github.com/crossplane-contrib/provider-jet-intersight/apis/sdcard/v1alpha1"
	v1alpha1sdwan "github.com/crossplane-contrib/provider-jet-intersight/apis/sdwan/v1alpha1"
	v1alpha1server "github.com/crossplane-contrib/provider-jet-intersight/apis/server/v1alpha1"
	v1alpha1smtp "github.com/crossplane-contrib/provider-jet-intersight/apis/smtp/v1alpha1"
	v1alpha1snmp "github.com/crossplane-contrib/provider-jet-intersight/apis/snmp/v1alpha1"
	v1alpha1software "github.com/crossplane-contrib/provider-jet-intersight/apis/software/v1alpha1"
	v1alpha1softwarerepository "github.com/crossplane-contrib/provider-jet-intersight/apis/softwarerepository/v1alpha1"
	v1alpha1sol "github.com/crossplane-contrib/provider-jet-intersight/apis/sol/v1alpha1"
	v1alpha1ssh "github.com/crossplane-contrib/provider-jet-intersight/apis/ssh/v1alpha1"
	v1alpha1storage "github.com/crossplane-contrib/provider-jet-intersight/apis/storage/v1alpha1"
	v1alpha1syslog "github.com/crossplane-contrib/provider-jet-intersight/apis/syslog/v1alpha1"
	v1alpha1tam "github.com/crossplane-contrib/provider-jet-intersight/apis/tam/v1alpha1"
	v1alpha1techsupportmanagement "github.com/crossplane-contrib/provider-jet-intersight/apis/techsupportmanagement/v1alpha1"
	v1alpha1terraform "github.com/crossplane-contrib/provider-jet-intersight/apis/terraform/v1alpha1"
	v1alpha1thermal "github.com/crossplane-contrib/provider-jet-intersight/apis/thermal/v1alpha1"
	v1alpha1uuidpool "github.com/crossplane-contrib/provider-jet-intersight/apis/uuidpool/v1alpha1"
	v1alpha1apis "github.com/crossplane-contrib/provider-jet-intersight/apis/v1alpha1"
	v1alpha1virtualization "github.com/crossplane-contrib/provider-jet-intersight/apis/virtualization/v1alpha1"
	v1alpha1vmedia "github.com/crossplane-contrib/provider-jet-intersight/apis/vmedia/v1alpha1"
	v1alpha1vmrc "github.com/crossplane-contrib/provider-jet-intersight/apis/vmrc/v1alpha1"
	v1alpha1vnc "github.com/crossplane-contrib/provider-jet-intersight/apis/vnc/v1alpha1"
	v1alpha1vnic "github.com/crossplane-contrib/provider-jet-intersight/apis/vnic/v1alpha1"
	v1alpha1vrf "github.com/crossplane-contrib/provider-jet-intersight/apis/vrf/v1alpha1"
	v1alpha1workflow "github.com/crossplane-contrib/provider-jet-intersight/apis/workflow/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1access.SchemeBuilder.AddToScheme,
		v1alpha1adapter.SchemeBuilder.AddToScheme,
		v1alpha1appliance.SchemeBuilder.AddToScheme,
		v1alpha1asset.SchemeBuilder.AddToScheme,
		v1alpha1bios.SchemeBuilder.AddToScheme,
		v1alpha1boot.SchemeBuilder.AddToScheme,
		v1alpha1bulk.SchemeBuilder.AddToScheme,
		v1alpha1capability.SchemeBuilder.AddToScheme,
		v1alpha1certificatemanagement.SchemeBuilder.AddToScheme,
		v1alpha1chassis.SchemeBuilder.AddToScheme,
		v1alpha1comm.SchemeBuilder.AddToScheme,
		v1alpha1connectorpack.SchemeBuilder.AddToScheme,
		v1alpha1convergedinfra.SchemeBuilder.AddToScheme,
		v1alpha1crd.SchemeBuilder.AddToScheme,
		v1alpha1deviceconnector.SchemeBuilder.AddToScheme,
		v1alpha1externalsite.SchemeBuilder.AddToScheme,
		v1alpha1fabric.SchemeBuilder.AddToScheme,
		v1alpha1fcpool.SchemeBuilder.AddToScheme,
		v1alpha1firmware.SchemeBuilder.AddToScheme,
		v1alpha1hcl.SchemeBuilder.AddToScheme,
		v1alpha1hyperflex.SchemeBuilder.AddToScheme,
		v1alpha1iam.SchemeBuilder.AddToScheme,
		v1alpha1ipmioverlan.SchemeBuilder.AddToScheme,
		v1alpha1ippool.SchemeBuilder.AddToScheme,
		v1alpha1iqnpool.SchemeBuilder.AddToScheme,
		v1alpha1kubernetes.SchemeBuilder.AddToScheme,
		v1alpha1kvm.SchemeBuilder.AddToScheme,
		v1alpha1license.SchemeBuilder.AddToScheme,
		v1alpha1macpool.SchemeBuilder.AddToScheme,
		v1alpha1memory.SchemeBuilder.AddToScheme,
		v1alpha1networkconfig.SchemeBuilder.AddToScheme,
		v1alpha1notification.SchemeBuilder.AddToScheme,
		v1alpha1ntp.SchemeBuilder.AddToScheme,
		v1alpha1oauth.SchemeBuilder.AddToScheme,
		v1alpha1oprs.SchemeBuilder.AddToScheme,
		v1alpha1organization.SchemeBuilder.AddToScheme,
		v1alpha1os.SchemeBuilder.AddToScheme,
		v1alpha1power.SchemeBuilder.AddToScheme,
		v1alpha1recovery.SchemeBuilder.AddToScheme,
		v1alpha1resource.SchemeBuilder.AddToScheme,
		v1alpha1resourcepool.SchemeBuilder.AddToScheme,
		v1alpha1sdcard.SchemeBuilder.AddToScheme,
		v1alpha1sdwan.SchemeBuilder.AddToScheme,
		v1alpha1server.SchemeBuilder.AddToScheme,
		v1alpha1smtp.SchemeBuilder.AddToScheme,
		v1alpha1snmp.SchemeBuilder.AddToScheme,
		v1alpha1software.SchemeBuilder.AddToScheme,
		v1alpha1softwarerepository.SchemeBuilder.AddToScheme,
		v1alpha1sol.SchemeBuilder.AddToScheme,
		v1alpha1ssh.SchemeBuilder.AddToScheme,
		v1alpha1storage.SchemeBuilder.AddToScheme,
		v1alpha1syslog.SchemeBuilder.AddToScheme,
		v1alpha1tam.SchemeBuilder.AddToScheme,
		v1alpha1techsupportmanagement.SchemeBuilder.AddToScheme,
		v1alpha1terraform.SchemeBuilder.AddToScheme,
		v1alpha1thermal.SchemeBuilder.AddToScheme,
		v1alpha1uuidpool.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1alpha1virtualization.SchemeBuilder.AddToScheme,
		v1alpha1vmedia.SchemeBuilder.AddToScheme,
		v1alpha1vmrc.SchemeBuilder.AddToScheme,
		v1alpha1vnc.SchemeBuilder.AddToScheme,
		v1alpha1vnic.SchemeBuilder.AddToScheme,
		v1alpha1vrf.SchemeBuilder.AddToScheme,
		v1alpha1workflow.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
