/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServerConfigurationUtilityDistributableAncestorsObservation struct {
}

type ServerConfigurationUtilityDistributableAncestorsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributableCatalogObservation struct {
}

type ServerConfigurationUtilityDistributableCatalogParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributableComponentMetaObservation struct {
}

type ServerConfigurationUtilityDistributableComponentMetaParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The name of the component in the compressed HSU bundle.
	// +kubebuilder:validation:Optional
	ComponentLabel *string `json:"componentLabel,omitempty" tf:"component_label,omitempty"`

	// The type of component image within the distributable.
	// * `ALL` - This represents all the components.
	// * `ALL,HDD` - This represents all the components plus the HDDs.
	// * `Drive-U.2` - This represents the U.2 drives that are SFF/LFF drives (mostly all the drives will fall under this category).
	// * `Storage` - This represents the storage controller components.
	// * `None` - This represents none of the components.
	// * `NXOS` - This represents NXOS components.
	// * `IOM` - This represents IOM components.
	// * `PSU` - This represents PSU components.
	// * `CIMC` - This represents CIMC components.
	// * `BIOS` - This represents BIOS components.
	// * `PCIE` - This represents PCIE components.
	// * `Drive` - This represents Drive components.
	// * `DIMM` - This represents DIMM components.
	// * `BoardController` - This represents Board Controller components.
	// * `StorageController` - This represents Storage Controller components.
	// * `Storage-Sasexpander` - This represents Storage Sas-Expander components.
	// * `Storage-U.2` - This represents U2 Storage Controller components.
	// * `HBA` - This represents HBA components.
	// * `GPU` - This represents GPU components.
	// * `SasExpander` - This represents SasExpander components.
	// * `MSwitch` - This represents mSwitch components.
	// * `CMC` - This represents CMC components.
	// +kubebuilder:validation:Optional
	ComponentType *string `json:"componentType,omitempty" tf:"component_type,omitempty"`

	// This shows the description of component image within the distributable.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The type of disruption on each component. For example, host reboot, automatic power cycle, and manual power cycle.
	// * `None` - Indicates that the component did not receive a disruption request.
	// * `HostReboot` - Indicates that the component received a host reboot request.
	// * `EndpointReboot` - Indicates that the component received an end point reboot request.
	// * `ManualPowerCycle` - Indicates that the component received a manual power cycle request.
	// * `AutomaticPowerCycle` - Indicates that the component received an automatic power cycle request.
	// +kubebuilder:validation:Optional
	Disruption *string `json:"disruption,omitempty" tf:"disruption,omitempty"`

	// This shows the path of component image within the distributable.
	// +kubebuilder:validation:Optional
	ImagePath *string `json:"imagePath,omitempty" tf:"image_path,omitempty"`

	// If set, the component can be updated through out-of-band management, else, is updated through host service utility boot.
	// +kubebuilder:validation:Optional
	IsOobSupported *bool `json:"isOobSupported,omitempty" tf:"is_oob_supported,omitempty"`

	// The model of the component image in the distributable.
	// +kubebuilder:validation:Optional
	Model *string `json:"model,omitempty" tf:"model,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// +kubebuilder:validation:Optional
	OobManageability []*string `json:"oobManageability,omitempty" tf:"oob_manageability,omitempty"`

	// The image version of components packaged in the distributable.
	// +kubebuilder:validation:Optional
	PackedVersion *string `json:"packedVersion,omitempty" tf:"packed_version,omitempty"`

	// The redfish target for each component.
	// +kubebuilder:validation:Optional
	RedfishURL *string `json:"redfishUrl,omitempty" tf:"redfish_url,omitempty"`

	// The version of component image in the distributable.
	// +kubebuilder:validation:Optional
	Vendor *string `json:"vendor,omitempty" tf:"vendor,omitempty"`
}

type ServerConfigurationUtilityDistributableDistributableMetasObservation struct {
}

type ServerConfigurationUtilityDistributableDistributableMetasParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributableNrSourceObservation struct {
}

type ServerConfigurationUtilityDistributableNrSourceParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// The enum values provides the list of concrete types that can be instantiated from this abstract type.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// The enum values provides the list of concrete types that can be instantiated from this abstract type.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type ServerConfigurationUtilityDistributableObservation struct {
}

type ServerConfigurationUtilityDistributableParameters struct {

	// The Account ID for this managed object.
	// +kubebuilder:validation:Optional
	AccountMoid *string `json:"accountMoid,omitempty" tf:"account_moid,omitempty"`

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// An array of relationships to moBaseMo resources.
	// +kubebuilder:validation:Optional
	Ancestors []ServerConfigurationUtilityDistributableAncestorsParameters `json:"ancestors,omitempty" tf:"ancestors,omitempty"`

	// The bundle type of the image, as published on cisco.com.
	// +kubebuilder:validation:Optional
	BundleType *string `json:"bundleType,omitempty" tf:"bundle_type,omitempty"`

	// A reference to a softwarerepositoryCatalog resource.
	// When the $expand query parameter is specified, the referenced resource is returned inline.
	// +kubebuilder:validation:Optional
	Catalog []ServerConfigurationUtilityDistributableCatalogParameters `json:"catalog,omitempty" tf:"catalog,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// +kubebuilder:validation:Optional
	ComponentMeta []ServerConfigurationUtilityDistributableComponentMetaParameters `json:"componentMeta,omitempty" tf:"component_meta,omitempty"`

	// The time when this managed object was created.
	// +kubebuilder:validation:Optional
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// User provided description about the file. Cisco provided description for image inventoried from a Cisco repository.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// An array of relationships to firmwareDistributableMeta resources.
	// +kubebuilder:validation:Optional
	DistributableMetas []ServerConfigurationUtilityDistributableDistributableMetasParameters `json:"distributableMetas,omitempty" tf:"distributable_metas,omitempty"`

	// The DomainGroup ID for this managed object.
	// +kubebuilder:validation:Optional
	DomainGroupMoid *string `json:"domainGroupMoid,omitempty" tf:"domain_group_moid,omitempty"`

	// The number of times this file has been downloaded from the local repository. It is used by the repository monitoring process to determine the files that are to be evicted from the cache.
	// +kubebuilder:validation:Optional
	DownloadCount *int64 `json:"downloadCount,omitempty" tf:"download_count,omitempty"`

	// The unique identifier for an image in a Cisco repository.
	// +kubebuilder:validation:Optional
	GUID *string `json:"guid,omitempty" tf:"guid,omitempty"`

	// The type of image which the distributable falls into according to the component it can upgrade. For e.g.; Standalone server, Intersight managed server, UCS Managed Fabric Interconnect. The field is used in private appliance mode, where image does not have description populated from CCO.
	// +kubebuilder:validation:Optional
	ImageType *string `json:"imageType,omitempty" tf:"image_type,omitempty"`

	// The action to be performed on the imported file. If 'PreCache' is set, the image will be cached in Appliance. Applicable in Intersight appliance deployment. If 'Evict' is set, the cached file will be removed. Applicable in Intersight appliance deployment. If 'GeneratePreSignedUploadUrl' is set, generates pre signed URL (s) for the file to be imported into the repository. Applicable for local machine source. The URL (s) will be populated under LocalMachine file server. If 'CompleteImportProcess' is set, the ImportState is marked as 'Imported'. Applicable for local machine source. If 'Cancel' is set, the ImportState is marked as 'Failed'. Applicable for local machine source.
	// * `None` - No action should be taken on the imported file.
	// * `GeneratePreSignedUploadUrl` - Generate pre signed URL of file for importing into the repository.
	// * `GeneratePreSignedDownloadUrl` - Generate pre signed URL of file in the repository to download.
	// * `CompleteImportProcess` - Mark that the import process of the file into the repository is complete.
	// * `MarkImportFailed` - Mark to indicate that the import process of the file into the repository failed.
	// * `PreCache` - Cache the file into the Intersight Appliance.
	// * `Cancel` - The cancel import process for the file into the repository.
	// * `Extract` - The action to extract the file in the external repository.
	// * `Evict` - Evict the cached file from the Intersight Appliance.
	// +kubebuilder:validation:Optional
	ImportAction *string `json:"importAction,omitempty" tf:"import_action,omitempty"`

	// The state  of this file in the repository or Appliance. The importState is updated during the import operation and as part of the repository monitoring process.
	// * `ReadyForImport` - The image is ready to be imported into the repository.
	// * `Importing` - The image is being imported into the repository.
	// * `Imported` - The image has been extracted and imported into the repository.
	// * `PendingExtraction` - Indicates that the image has been imported but not extracted in the repository.
	// * `Extracting` - Indicates that the image is being extracted into the repository.
	// * `Extracted` - Indicates that the image has been extracted into the repository.
	// * `Failed` - The image import from an external source to the repository has failed.
	// * `MetaOnly` - The image is present in an external repository.
	// * `ReadyForCache` - The image is ready to be cached into the Intersight Appliance.
	// * `Caching` - Indicates that the image is being cached into the Intersight Appliance or endpoint cache.
	// * `Cached` - Indicates that the image has been cached into the Intersight Appliance or endpoint cache.
	// * `CachingFailed` - Indicates that the image caching into the Intersight Appliance failed or endpoint cache.
	// * `Corrupted` - Indicates that the image in the local repository (or endpoint cache) has been corrupted after it was cached.
	// * `Evicted` - Indicates that the image has been evicted from the Intersight Appliance (or endpoint cache) to reclaim storage space.
	// * `Invalid` - Indicates that the corresponding distributable MO has been removed from the backend. This can be due to unpublishing of an image.
	// +kubebuilder:validation:Optional
	ImportState *string `json:"importState,omitempty" tf:"import_state,omitempty"`

	// The time at which this image or file was imported/cached into the repositry. if the 'ImportState' is 'Imported', the time at which this image or file was imported. if the 'ImportState' is 'Cached', the time at which this image or file was cached.
	// +kubebuilder:validation:Optional
	ImportedTime *string `json:"importedTime,omitempty" tf:"imported_time,omitempty"`

	// The time at which this file was last downloaded from the local repository. It is used by the repository monitoring process to determine the files that are to be evicted from the cache.
	// +kubebuilder:validation:Optional
	LastAccessTime *string `json:"lastAccessTime,omitempty" tf:"last_access_time,omitempty"`

	// The MD5 ETag for a file that is stored in Intersight repository or in the appliance cache. Warning - MD5 is currently broken and this will be migrated to SHA shortly.
	// +kubebuilder:validation:Optional
	Md5ETag *string `json:"md5eTag,omitempty" tf:"md5e_tag,omitempty"`

	// The md5sum checksum of the file. This information is available for all Cisco distributed images and files imported to the local repository.
	// +kubebuilder:validation:Optional
	Md5Sum *string `json:"md5sum,omitempty" tf:"md5sum,omitempty"`

	// The mdfid of the image provided by cisco.com.
	// +kubebuilder:validation:Optional
	Mdfid *string `json:"mdfid,omitempty" tf:"mdfid,omitempty"`

	// The time when this managed object was last modified.
	// +kubebuilder:validation:Optional
	ModTime *string `json:"modTime,omitempty" tf:"mod_time,omitempty"`

	// The endpoint model for which this firmware image is applicable.
	// +kubebuilder:validation:Optional
	Model *string `json:"model,omitempty" tf:"model,omitempty"`

	// The unique identifier of this Managed Object instance.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// Location of the file in an external repository.
	// +kubebuilder:validation:Optional
	NrSource []ServerConfigurationUtilityDistributableNrSourceParameters `json:"nrSource,omitempty" tf:"nr_source,omitempty"`

	// Vendor provided version for the file.
	// +kubebuilder:validation:Optional
	NrVersion *string `json:"nrVersion,omitempty" tf:"nr_version,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// +kubebuilder:validation:Optional
	Owners []*string `json:"owners,omitempty" tf:"owners,omitempty"`

	// A reference to a moBaseMo resource.
	// When the $expand query parameter is specified, the referenced resource is returned inline.
	// +kubebuilder:validation:Optional
	Parent []ServerConfigurationUtilityDistributableParentParameters `json:"parent,omitempty" tf:"parent,omitempty"`

	// An array of relationships to moBaseMo resources.
	// +kubebuilder:validation:Optional
	PermissionResources []ServerConfigurationUtilityDistributablePermissionResourcesParameters `json:"permissionResources,omitempty" tf:"permission_resources,omitempty"`

	// The platform type of the image.
	// +kubebuilder:validation:Optional
	PlatformType *string `json:"platformType,omitempty" tf:"platform_type,omitempty"`

	// The build which is recommended by Cisco.
	// +kubebuilder:validation:Optional
	RecommendedBuild *string `json:"recommendedBuild,omitempty" tf:"recommended_build,omitempty"`

	// A reference to a softwarerepositoryRelease resource.
	// When the $expand query parameter is specified, the referenced resource is returned inline.
	// +kubebuilder:validation:Optional
	Release []ServerConfigurationUtilityDistributableReleaseParameters `json:"release,omitempty" tf:"release,omitempty"`

	// The date on which the file was released or distributed by its vendor.
	// +kubebuilder:validation:Optional
	ReleaseDate *string `json:"releaseDate,omitempty" tf:"release_date,omitempty"`

	// The url for the release notes of this image.
	// +kubebuilder:validation:Optional
	ReleaseNotesURL *string `json:"releaseNotesUrl,omitempty" tf:"release_notes_url,omitempty"`

	// The sha512sum of the file. This information is available for all Cisco distributed images and files imported to the local repository.
	// +kubebuilder:validation:Optional
	Sha512Sum *string `json:"sha512sum,omitempty" tf:"sha512sum,omitempty"`

	// Intersight provides pre-built workflows, tasks and policies to end users through global catalogs.
	// Objects that are made available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs.
	// +kubebuilder:validation:Optional
	SharedScope *string `json:"sharedScope,omitempty" tf:"shared_scope,omitempty"`

	// The size (in bytes) of the file. This information is available for all Cisco distributed images and files imported to the local repository.
	// +kubebuilder:validation:Optional
	Size *int64 `json:"size,omitempty" tf:"size,omitempty"`

	// The software advisory, if any, provided by the vendor for this file.
	// +kubebuilder:validation:Optional
	SoftwareAdvisoryURL *string `json:"softwareAdvisoryUrl,omitempty" tf:"software_advisory_url,omitempty"`

	// The software type id provided by cisco.com.
	// +kubebuilder:validation:Optional
	SoftwareTypeID *string `json:"softwareTypeId,omitempty" tf:"software_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	SupportedModels []*string `json:"supportedModels,omitempty" tf:"supported_models,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []ServerConfigurationUtilityDistributableTagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// The vendor or publisher of this file.
	// +kubebuilder:validation:Optional
	Vendor *string `json:"vendor,omitempty" tf:"vendor,omitempty"`

	// The versioning info for this managed object.
	// +kubebuilder:validation:Optional
	VersionContext []ServerConfigurationUtilityDistributableVersionContextParameters `json:"versionContext,omitempty" tf:"version_context,omitempty"`
}

type ServerConfigurationUtilityDistributableParentObservation struct {
}

type ServerConfigurationUtilityDistributableParentParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributablePermissionResourcesObservation struct {
}

type ServerConfigurationUtilityDistributablePermissionResourcesParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributableReleaseObservation struct {
}

type ServerConfigurationUtilityDistributableReleaseParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributableTagsObservation struct {
}

type ServerConfigurationUtilityDistributableTagsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The string representation of a tag key.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The string representation of a tag value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ServerConfigurationUtilityDistributableVersionContextInterestedMosObservation struct {
}

type ServerConfigurationUtilityDistributableVersionContextInterestedMosParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type ServerConfigurationUtilityDistributableVersionContextObservation struct {
}

type ServerConfigurationUtilityDistributableVersionContextParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// +kubebuilder:validation:Optional
	InterestedMos []ServerConfigurationUtilityDistributableVersionContextInterestedMosParameters `json:"interestedMos,omitempty" tf:"interested_mos,omitempty"`

	// The version of the Managed Object, e.g. an incrementing number or a hash id.
	// +kubebuilder:validation:Optional
	NrVersion *string `json:"nrVersion,omitempty" tf:"nr_version,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// A reference to the original Managed Object.
	// +kubebuilder:validation:Optional
	RefMo []ServerConfigurationUtilityDistributableVersionContextRefMoParameters `json:"refMo,omitempty" tf:"ref_mo,omitempty"`

	// The time this versioned Managed Object was created.
	// +kubebuilder:validation:Optional
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// Specifies type of version. Currently the only supported value is "Configured"
	// that is used to keep track of snapshots of policies and profiles that are intended
	// to be configured to target endpoints.
	// * `Modified` - Version created every time an object is modified.
	// * `Configured` - Version created every time an object is configured to the service profile.
	// * `Deployed` - Version created for objects related to a service profile when it is deployed.
	// +kubebuilder:validation:Optional
	VersionType *string `json:"versionType,omitempty" tf:"version_type,omitempty"`
}

type ServerConfigurationUtilityDistributableVersionContextRefMoObservation struct {
}

type ServerConfigurationUtilityDistributableVersionContextRefMoParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

// ServerConfigurationUtilityDistributableSpec defines the desired state of ServerConfigurationUtilityDistributable
type ServerConfigurationUtilityDistributableSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServerConfigurationUtilityDistributableParameters `json:"forProvider"`
}

// ServerConfigurationUtilityDistributableStatus defines the observed state of ServerConfigurationUtilityDistributable.
type ServerConfigurationUtilityDistributableStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServerConfigurationUtilityDistributableObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServerConfigurationUtilityDistributable is the Schema for the ServerConfigurationUtilityDistributables API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,intersightjet}
type ServerConfigurationUtilityDistributable struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServerConfigurationUtilityDistributableSpec   `json:"spec"`
	Status            ServerConfigurationUtilityDistributableStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServerConfigurationUtilityDistributableList contains a list of ServerConfigurationUtilityDistributables
type ServerConfigurationUtilityDistributableList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServerConfigurationUtilityDistributable `json:"items"`
}

// Repository type metadata.
var (
	ServerConfigurationUtilityDistributable_Kind             = "ServerConfigurationUtilityDistributable"
	ServerConfigurationUtilityDistributable_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServerConfigurationUtilityDistributable_Kind}.String()
	ServerConfigurationUtilityDistributable_KindAPIVersion   = ServerConfigurationUtilityDistributable_Kind + "." + CRDGroupVersion.String()
	ServerConfigurationUtilityDistributable_GroupVersionKind = CRDGroupVersion.WithKind(ServerConfigurationUtilityDistributable_Kind)
)

func init() {
	SchemeBuilder.Register(&ServerConfigurationUtilityDistributable{}, &ServerConfigurationUtilityDistributableList{})
}
