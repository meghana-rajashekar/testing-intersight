/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefaultHealthCheckScriptInfoObservation struct {
}

type DefaultHealthCheckScriptInfoParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// Health check aggregate script that runs in the HyperFlex Leader Node. |
	// It aggregates the output of all HyperFlex nodes and provides the health check result.
	// +kubebuilder:validation:Optional
	AggregateScriptName *string `json:"aggregateScriptName,omitempty" tf:"aggregate_script_name,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// HyperFlex Data Platform version running on the target device.
	// +kubebuilder:validation:Optional
	HyperflexVersion *string `json:"hyperflexVersion,omitempty" tf:"hyperflex_version,omitempty"`

	// Version of the health check script associated with the health check definition.
	// +kubebuilder:validation:Optional
	NrVersion *string `json:"nrVersion,omitempty" tf:"nr_version,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Location of the health check script's execution on the HyperFlex device.
	// +kubebuilder:validation:Optional
	ScriptExecuteLocation *string `json:"scriptExecuteLocation,omitempty" tf:"script_execute_location,omitempty"`

	// Input for the health check script execution.
	// +kubebuilder:validation:Optional
	ScriptInput *string `json:"scriptInput,omitempty" tf:"script_input,omitempty"`

	// Name of the health check script to be executed.
	// +kubebuilder:validation:Optional
	ScriptName *string `json:"scriptName,omitempty" tf:"script_name,omitempty"`
}

type HealthCheckDefinitionAncestorsObservation struct {
}

type HealthCheckDefinitionAncestorsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type HealthCheckDefinitionObservation struct {
}

type HealthCheckDefinitionParameters struct {

	// The Account ID for this managed object.
	// +kubebuilder:validation:Optional
	AccountMoid *string `json:"accountMoid,omitempty" tf:"account_moid,omitempty"`

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// An array of relationships to moBaseMo resources.
	// +kubebuilder:validation:Optional
	Ancestors []HealthCheckDefinitionAncestorsParameters `json:"ancestors,omitempty" tf:"ancestors,omitempty"`

	// Category that the health check belongs to.
	// +kubebuilder:validation:Optional
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// Static information detailing the common causes for the health check failure.
	// +kubebuilder:validation:Optional
	CommonCauses *string `json:"commonCauses,omitempty" tf:"common_causes,omitempty"`

	// Execution configuration fo the health check script.
	// +kubebuilder:validation:Optional
	Configuration *string `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// The time when this managed object was created.
	// +kubebuilder:validation:Optional
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Default version Script info.
	// +kubebuilder:validation:Optional
	DefaultHealthCheckScriptInfo []DefaultHealthCheckScriptInfoParameters `json:"defaultHealthCheckScriptInfo,omitempty" tf:"default_health_check_script_info,omitempty"`

	// Description of the health check definition.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The DomainGroup ID for this managed object.
	// +kubebuilder:validation:Optional
	DomainGroupMoid *string `json:"domainGroupMoid,omitempty" tf:"domain_group_moid,omitempty"`

	// +kubebuilder:validation:Optional
	HealthCheckScriptInfos []HealthCheckScriptInfosParameters `json:"healthCheckScriptInfos,omitempty" tf:"health_check_script_infos,omitempty"`

	// Static information detailing the health impact of the health check failure.
	// +kubebuilder:validation:Optional
	HealthImpact *string `json:"healthImpact,omitempty" tf:"health_impact,omitempty"`

	// Internal name of the health check definition.
	// +kubebuilder:validation:Optional
	InternalName *string `json:"internalName,omitempty" tf:"internal_name,omitempty"`

	// Minimum HyperFlex version that the check is supported on. Defaults to version 3.0.1.
	// +kubebuilder:validation:Optional
	MinimumHyperFlexVersion *string `json:"minimumHyperFlexVersion,omitempty" tf:"minimum_hyper_flex_version,omitempty"`

	// The time when this managed object was last modified.
	// +kubebuilder:validation:Optional
	ModTime *string `json:"modTime,omitempty" tf:"mod_time,omitempty"`

	// The unique identifier of this Managed Object instance.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// +kubebuilder:validation:Optional
	Owners []*string `json:"owners,omitempty" tf:"owners,omitempty"`

	// A reference to a moBaseMo resource.
	// When the $expand query parameter is specified, the referenced resource is returned inline.
	// +kubebuilder:validation:Optional
	Parent []HealthCheckDefinitionParentParameters `json:"parent,omitempty" tf:"parent,omitempty"`

	// An array of relationships to moBaseMo resources.
	// +kubebuilder:validation:Optional
	PermissionResources []HealthCheckDefinitionPermissionResourcesParameters `json:"permissionResources,omitempty" tf:"permission_resources,omitempty"`

	// Static information containing additional reference for the health check.
	// +kubebuilder:validation:Optional
	Reference *string `json:"reference,omitempty" tf:"reference,omitempty"`

	// Static information detailing the possible remediation actions that can be taken to remedy the health check failure.
	// +kubebuilder:validation:Optional
	Resolution *string `json:"resolution,omitempty" tf:"resolution,omitempty"`

	// Execution mode of the health script on the HyperFlex cluster.
	// * `ON_DEMAND` - Execute the health check on-demand.
	// * `SCHEDULED` - Execute the health check on a scheduled interval.
	// +kubebuilder:validation:Optional
	ScriptExecutionMode *string `json:"scriptExecutionMode,omitempty" tf:"script_execution_mode,omitempty"`

	// Indicates if the script needs to be executed on HyperFlex compute nodes. |
	// Typically, scripts are only executed on the storage Nodes.
	// +kubebuilder:validation:Optional
	ScriptExecutionOnComputeNodes *bool `json:"scriptExecutionOnComputeNodes,omitempty" tf:"script_execution_on_compute_nodes,omitempty"`

	// Intersight provides pre-built workflows, tasks and policies to end users through global catalogs.
	// Objects that are made available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs.
	// +kubebuilder:validation:Optional
	SharedScope *string `json:"sharedScope,omitempty" tf:"shared_scope,omitempty"`

	// Hypervisor type that the Health Check is supported on (All, if it is hypervisor agnostic).
	// * `All` - The Health Check is hypervisor-agnostic.
	// * `ESXi` - The Health Check is supported only on Vmware ESXi hypervisor of any version.
	// * `` - The Health Check is supported only on Cisco HyperFlexAp platform.
	// * `IWE` - The Health Check is supported only on Cisco IWE platform.
	// * `HyperV` - The Health Check is supported only on Microsoft HyperV hypervisor.
	// +kubebuilder:validation:Optional
	SupportedHypervisorType *string `json:"supportedHypervisorType,omitempty" tf:"supported_hypervisor_type,omitempty"`

	// +kubebuilder:validation:Optional
	Tags []HealthCheckDefinitionTagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// Indicates whether the health check is executed only on the leader node, or on all nodes in the HyperFlex cluster.
	// * `EXECUTE_ON_LEADER_NODE` - Execute the health check script only on the HyperFlex cluster's leader node.
	// * `EXECUTE_ON_ALL_NODES` - Execute health check on all nodes and aggregate the results.
	// * `EXECUTE_ON_ALL_NODES_AND_AGGREGATE` - Execute the health check on all Nodes and perform custom aggregation.
	// +kubebuilder:validation:Optional
	TargetExecutionType *string `json:"targetExecutionType,omitempty" tf:"target_execution_type,omitempty"`

	// Health check script execution timeout.
	// +kubebuilder:validation:Optional
	Timeout *int64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// +kubebuilder:validation:Optional
	UnsupportedHyperFlexVersions []*string `json:"unsupportedHyperFlexVersions,omitempty" tf:"unsupported_hyper_flex_versions,omitempty"`

	// The versioning info for this managed object.
	// +kubebuilder:validation:Optional
	VersionContext []HealthCheckDefinitionVersionContextParameters `json:"versionContext,omitempty" tf:"version_context,omitempty"`
}

type HealthCheckDefinitionParentObservation struct {
}

type HealthCheckDefinitionParentParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type HealthCheckDefinitionPermissionResourcesObservation struct {
}

type HealthCheckDefinitionPermissionResourcesParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type HealthCheckDefinitionTagsObservation struct {
}

type HealthCheckDefinitionTagsParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The string representation of a tag key.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The string representation of a tag value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HealthCheckDefinitionVersionContextInterestedMosObservation struct {
}

type HealthCheckDefinitionVersionContextInterestedMosParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type HealthCheckDefinitionVersionContextObservation struct {
}

type HealthCheckDefinitionVersionContextParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// +kubebuilder:validation:Optional
	InterestedMos []HealthCheckDefinitionVersionContextInterestedMosParameters `json:"interestedMos,omitempty" tf:"interested_mos,omitempty"`

	// The version of the Managed Object, e.g. an incrementing number or a hash id.
	// +kubebuilder:validation:Optional
	NrVersion *string `json:"nrVersion,omitempty" tf:"nr_version,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// A reference to the original Managed Object.
	// +kubebuilder:validation:Optional
	RefMo []HealthCheckDefinitionVersionContextRefMoParameters `json:"refMo,omitempty" tf:"ref_mo,omitempty"`

	// The time this versioned Managed Object was created.
	// +kubebuilder:validation:Optional
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// Specifies type of version. Currently the only supported value is "Configured"
	// that is used to keep track of snapshots of policies and profiles that are intended
	// to be configured to target endpoints.
	// * `Modified` - Version created every time an object is modified.
	// * `Configured` - Version created every time an object is configured to the service profile.
	// * `Deployed` - Version created for objects related to a service profile when it is deployed.
	// +kubebuilder:validation:Optional
	VersionType *string `json:"versionType,omitempty" tf:"version_type,omitempty"`
}

type HealthCheckDefinitionVersionContextRefMoObservation struct {
}

type HealthCheckDefinitionVersionContextRefMoParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// The Moid of the referenced REST resource.
	// +kubebuilder:validation:Optional
	Moid *string `json:"moid,omitempty" tf:"moid,omitempty"`

	// The fully-qualified name of the remote type referred by this relationship.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients.
	// 1. If 'moid' is set this field is ignored.
	// 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the
	// resource matching the filter expression and populates it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request.
	// An error is returned if the filter matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`
}

type HealthCheckScriptInfosObservation struct {
}

type HealthCheckScriptInfosParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalProperties *string `json:"additionalProperties,omitempty" tf:"additional_properties,omitempty"`

	// Health check aggregate script that runs in the HyperFlex Leader Node. |
	// It aggregates the output of all HyperFlex nodes and provides the health check result.
	// +kubebuilder:validation:Optional
	AggregateScriptName *string `json:"aggregateScriptName,omitempty" tf:"aggregate_script_name,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// This property is used as a discriminator to identify the type of the payload
	// when marshaling and unmarshaling data.
	// +kubebuilder:validation:Optional
	ClassID *string `json:"classId,omitempty" tf:"class_id,omitempty"`

	// HyperFlex Data Platform version running on the target device.
	// +kubebuilder:validation:Optional
	HyperflexVersion *string `json:"hyperflexVersion,omitempty" tf:"hyperflex_version,omitempty"`

	// Version of the health check script associated with the health check definition.
	// +kubebuilder:validation:Optional
	NrVersion *string `json:"nrVersion,omitempty" tf:"nr_version,omitempty"`

	// The fully-qualified name of the instantiated, concrete type.
	// The value should be the same as the 'ClassId' property.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// Location of the health check script's execution on the HyperFlex device.
	// +kubebuilder:validation:Optional
	ScriptExecuteLocation *string `json:"scriptExecuteLocation,omitempty" tf:"script_execute_location,omitempty"`

	// Input for the health check script execution.
	// +kubebuilder:validation:Optional
	ScriptInput *string `json:"scriptInput,omitempty" tf:"script_input,omitempty"`

	// Name of the health check script to be executed.
	// +kubebuilder:validation:Optional
	ScriptName *string `json:"scriptName,omitempty" tf:"script_name,omitempty"`
}

// HealthCheckDefinitionSpec defines the desired state of HealthCheckDefinition
type HealthCheckDefinitionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HealthCheckDefinitionParameters `json:"forProvider"`
}

// HealthCheckDefinitionStatus defines the observed state of HealthCheckDefinition.
type HealthCheckDefinitionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HealthCheckDefinitionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HealthCheckDefinition is the Schema for the HealthCheckDefinitions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,intersightjet}
type HealthCheckDefinition struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HealthCheckDefinitionSpec   `json:"spec"`
	Status            HealthCheckDefinitionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HealthCheckDefinitionList contains a list of HealthCheckDefinitions
type HealthCheckDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HealthCheckDefinition `json:"items"`
}

// Repository type metadata.
var (
	HealthCheckDefinition_Kind             = "HealthCheckDefinition"
	HealthCheckDefinition_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HealthCheckDefinition_Kind}.String()
	HealthCheckDefinition_KindAPIVersion   = HealthCheckDefinition_Kind + "." + CRDGroupVersion.String()
	HealthCheckDefinition_GroupVersionKind = CRDGroupVersion.WithKind(HealthCheckDefinition_Kind)
)

func init() {
	SchemeBuilder.Register(&HealthCheckDefinition{}, &HealthCheckDefinitionList{})
}
